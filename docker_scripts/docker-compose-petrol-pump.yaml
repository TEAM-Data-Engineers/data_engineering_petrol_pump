version: '3'

services:
  stg_postgres:
    container_name : docker-stg-db
    image: postgis/postgis:16-3.4
    #image: postgres:15.5
    expose:
      - "5434" # Publishes 5433 to other containers but NOT to host machine
    ports:
      - "5434:5434"
    command: 
      -p 5434
    networks:
      - elt_network
    environment:
      POSTGRES_DB: stg_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 100
      timeout: 5s
      start_period: 180s


    volumes:
      - ./docker-entrypoint-initdb.d
      - stg_postgres_volume:/var/lib/posgresql/data
#      - /media/sf_data_engineering/group_project/data_engineering_petrol_pump/docker_scripts/stg_dbdata:/var/lib/database

    extra_hosts:
      - "host.docker.internal:host-gateway"


  python_petrol_pump:
    container_name : petrol-pump-loc-get-data
    image : python:petrol-pump-data-frame

    depends_on:
      stg_postgres:
        condition: service_healthy

  dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:1.5.0

    command:
      [

        "test",
        "--profiles-dir",
        "/root",
        "--project-dir",
        "/dbt"
#        "--full-refresh"
      ]

    networks:
      - elt_network

    volumes:
      - ./ppl_de_dbt/ppl_de_dbt:/dbt
      - ~/.dbt:/root

    depends_on:

      python_petrol_pump:
        condition: service_completed_successfully

      stg_postgres:
        condition: service_started


    environment:
      DBT_PROFILE: ppl_de_dbt
      DBT_TARGET: dev

    extra_hosts:
      - "host.docker.internal:host-gateway"

#  dc_compose_down:
#    container_name : docker-compose-down-count
#    image : ubuntu:docker-compose-down

#    depends_on:
#      dbt:
#        condition: service_completed_successfully

#  server:
#    container_name: dc-compose-down
#    image: ubuntu:latest
#    command: sh -c "docker-compose -f docker-compose-petrol-pump.yaml down --remove orphans"
#
#    depends_on:
#      
#      dbt:
#        condition: service_completed_successfully

networks:
  elt_network:
    driver: bridge

volumes:
  stg_postgres_volume:
